# Generated by Django 4.1.4 on 2023-01-05 20:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CropBudget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cropbudget_name", models.CharField(max_length=25)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Income_GrossRevenue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cash_prize", models.IntegerField()),
                ("expected_yeild", models.SmallIntegerField()),
                ("acres", models.SmallIntegerField()),
                ("govt_payments", models.IntegerField()),
                ("other_income", models.IntegerField()),
                (
                    "cropbudget",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cropbudgetestimator.cropbudget",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FixedCost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("farm_insurance", models.IntegerField()),
                ("real_state_taxes", models.IntegerField()),
                ("land_rent", models.IntegerField()),
                ("interest", models.IntegerField()),
                ("depreciation", models.IntegerField()),
                ("other", models.IntegerField()),
                (
                    "cropbudget",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cropbudgetestimator.cropbudget",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Financing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("income_taxes", models.IntegerField()),
                ("owner_withdrawal", models.IntegerField()),
                ("principle_payment", models.IntegerField()),
                ("other", models.IntegerField()),
                (
                    "cropbudget",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cropbudgetestimator.cropbudget",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Expense_VariableCost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("seed", models.IntegerField()),
                ("nitrogen", models.IntegerField()),
                ("phosphorus", models.IntegerField()),
                ("potassium", models.IntegerField()),
                ("sulfur", models.IntegerField()),
                ("limestone", models.IntegerField()),
                ("other_fertilizer", models.IntegerField()),
                ("herbicides", models.IntegerField()),
                ("fungicides", models.IntegerField()),
                ("Insecticides", models.IntegerField()),
                ("crop_insurance", models.IntegerField()),
                ("crop_miscellaneous", models.IntegerField()),
                ("suplies", models.IntegerField()),
                ("equipment_fuel", models.IntegerField()),
                ("drying_propane", models.IntegerField()),
                ("repair_machinery", models.IntegerField()),
                ("repair_buildings", models.IntegerField()),
                ("repair_others", models.IntegerField()),
                ("driver_hire", models.IntegerField()),
                ("equipment_hire", models.IntegerField()),
                ("custom_application", models.IntegerField()),
                ("freight_trucking", models.IntegerField()),
                ("storage", models.IntegerField()),
                ("utilities", models.IntegerField()),
                ("repair", models.IntegerField()),
                ("fuel_electricity", models.IntegerField()),
                ("hired_labour", models.IntegerField()),
                ("intrest_operating", models.IntegerField()),
                ("other", models.IntegerField()),
                (
                    "cropbudget",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cropbudgetestimator.cropbudget",
                    ),
                ),
            ],
        ),
    ]
